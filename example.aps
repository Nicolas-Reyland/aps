
K :: N ;

+ :: {
    A + B = B + A ;
    A + B + ... = (A + B) + ... ;
    (A + B) + C = A + (B + C) ;
    A + 0 = A ;
}

* :: {
    A * B = B * A ;
    A * B * ... = (A * B) * ... ;
    (A * B) * C = A * (B * C) ;
    1 * ... = ... ;
    A * 0 = 0 ;
}

^ :: {
    A ^ N = 1 $ * A $ # N ;
}

_ :: {
    A * (B + C) = (A * B) + (A * C) ;
    A * f(B) = f(A * B) ;
}

f :: A -> f(A) ;
